{"version":3,"sources":["components/Todo.js","components/TodoListView.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","deleteTodoHandler","_id","axios","delete","then","res","console","log","data","date","Date","todo","created_at","toLocaleString","timestamp_updated_at","class","String","title","toUpperCase","description","onClick","className","TodoView","todoList","map","Todo","App","useState","setTodoList","setTitle","desc","setDesc","useEffect","get","onChange","event","target","value","placeholder","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAqDeA,MAlDf,SAAkBC,GAEhB,IAAMC,EAAoB,SAACC,GACzBC,IACGC,OADH,gEACmEF,IAChEG,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,UAG/BC,EAAO,IAAIC,KAAKX,EAAMY,KAAKC,YAM/B,GALAN,QAAQC,IAAIE,GAGZA,EAAO,eAFPA,EAAOA,EAAKI,kBAITd,EAAMY,KAAKG,qBAAqB,CAC/B,IAAIL,EAAO,IAAIC,KAAKX,EAAMY,KAAKG,sBAI/BL,EAAO,oBAFPA,EAAOA,EAAKI,kBAOhB,OACE,oBAAIE,MAAM,kBAAV,SACC,sBAAKA,MAAM,OAAX,UACG,oBAAIA,MAAM,cAAV,SAAyBC,OAAOjB,EAAMY,KAAKM,OAAOC,gBAClD,sBAAKH,MAAM,YAAX,UACE,mBAAGA,MAAM,YAAT,SAAsBhB,EAAMY,KAAKQ,cACjC,mBAAGJ,MAAM,aAAT,SAAuBN,IAEvB,yBACAW,QAAS,kBAAMpB,EAAkBD,EAAMY,KAAKV,MAC5CoB,UAAU,iDAFV,UAIA,mBAAGN,MAAM,gBAAmB,OAE5B,yBACAK,QAAS,kBAAMpB,EAAkBD,EAAMY,KAAKV,MAC5CoB,UAAU,kDAFV,UAIA,mBAAGN,MAAM,eAAkB,gBC3CtB,SAASO,EAASvB,GAC/B,OACE,8BACE,oBAAIgB,MAAM,+BAAV,SACGhB,EAAMwB,SAASC,KAAI,SAACb,GAAD,OAClB,cAACc,EAAD,CAAUd,KAAMA,W,MCyDXe,MA1Df,WACE,MAAgCC,mBAAS,CAAC,KAA1C,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOV,EAAP,KAAcY,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAqBA,OAlBAC,qBAAU,WACR9B,IACG+B,IAAI,yDACJ7B,MAAK,SAACC,GACLuB,EAAYvB,EAAIG,YAepB,sBACEa,UAAU,kGADZ,UAGE,4DACA,sBAAKA,UAAU,aAAf,UAEE,uBAAMA,UAAU,YAAhB,UACE,uBACEA,UAAU,4BACVa,SAAU,SAACC,GAAD,OAAWN,EAASM,EAAMC,OAAOC,QAC3CC,YAAY,UAEd,uBACEjB,UAAU,0BACVa,SAAU,SAACC,GAAD,OAAWJ,EAAQI,EAAMC,OAAOC,QAC1CC,YAAY,gBAEV,qBAAKvB,MAAM,yCAAX,SACE,wBAAQM,UAAU,gBAAgBD,QA5BzB,WACrBlB,IACGqC,KAAK,yDAA0D,CAC9DtB,MAAOA,EACPE,YAAaW,IAEd1B,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAsBjB,2BAMR,8BACE,cAACiB,EAAD,CAAUC,SAAUA,aC5CfiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74811a83.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n\nfunction TodoItem(props) {\n\n  const deleteTodoHandler = (_id) => {\n    axios\n      .delete(`https://to-do-app-farm-backend.herokuapp.com/api/todo/${_id}`)\n      .then((res) => console.log(res.data));\n  };\n\n  let date = new Date(props.todo.created_at);\n  console.log(date);\n  date = date.toLocaleString();\n  \n  date = 'created on ' + date\n\n  if(props.todo.timestamp_updated_at){\n      let date = new Date(props.todo.timestamp_updated_at);\n     \n      date = date.toLocaleString();\n      \n      date = 'task updated on ' + date\n \n  }\n\n      \n  return (\n    <li class=\"list-group-item\">\n     <div class=\"card\">\n        <h4 class=\"card-header\">{String(props.todo.title).toUpperCase()}</h4>\n        <div class=\"card-body\">\n          <p class=\"card-text\">{props.todo.description}</p>\n          <p class=\"text-muted\">{date}</p>\n          \n          <button\n          onClick={() => deleteTodoHandler(props.todo._id)}\n          className=\"border-0 btn-transition btn btn-outline-danger\"\n        >\n          <i class=\"fa fa-trash\"></i>{\" \"}\n        </button>\n          <button\n          onClick={() => deleteTodoHandler(props.todo._id)}\n          className=\"border-0 btn-transition btn btn-outline-success\"\n        >\n          <i class=\"fa fa-edit\"></i>{\" \"}\n        </button>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n\n","import TodoItem from \"./Todo\";\n\nexport default function TodoView(props) {\n  return (\n    <div >\n      <ul class=\" list-group list-group-flush\">\n        {props.todoList.map((todo) => (\n          <TodoItem todo={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoView from \"./components/TodoListView\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState([{}]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // Read all todos\n  useEffect(() => {\n    axios\n      .get(\"https://to-do-app-farm-backend.herokuapp.com/api/todo\")\n      .then((res) => {\n        setTodoList(res.data);\n      });\n  });\n\n  // Post a todo\n  const addTodoHandler = () => {\n    axios\n      .post(\"https://to-do-app-farm-backend.herokuapp.com/api/todo/\", {\n        title: title,\n        description: desc,\n      })\n      .then((res) => console.log(res));\n  };\n\n  return (\n    <div\n      className=\" container col-md-5 todo-app list-group-item  justify-content-center align-items-center mx-auto\"\n    >\n      <h1>What's the Plan for Today?</h1>\n      <div className=\"card-body \">\n\n        <span className=\"card-text\">\n          <input\n            className=\"mb-2 form-control titleIn\"\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"Title\"\n          />\n          <input\n            className=\"mb-2 form-control desIn\"\n            onChange={(event) => setDesc(event.target.value)}\n            placeholder=\"Description\"\n          />\n              <div class=\"col d-flex justify-content-center mb-3\">\n                <button className=\"glow-on-hover\" onClick={addTodoHandler}>Add Task</button>\n\n              </div>\n        </span>\n\n        \n        <div>\n          <TodoView todoList={todoList} />\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n// HACER UN CAMBIO EN EL DISEÃ‘O\n\n{\n  /* <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n\n<div class=\"container\">\n<div class=\"mt-5\">\n\n      <div class=\"d-style btn btn-brc-tp border-2 bgc-white btn-outline-blue btn-h-outline-blue btn-a-outline-blue w-100 my-2 py-3 shadow-sm\">\n        <!-- Basic Plan -->\n        <div class=\"row align-items-center\">\n          <div class=\"col-12 col-md-4\">\n            <h4 class=\"pt-3 text-170 text-600 text-primary-d1 letter-spacing\">\n              Basic Plan\n            </h4>\n\n            <div class=\"text-secondary-d1 text-120\">\n              <span class=\"ml-n15 align-text-bottom\">$</span><span class=\"text-180\">10</span> / month\n            </div>\n          </div>\n\n          <ul class=\"list-unstyled mb-0 col-12 col-md-4 text-dark-l1 text-90 text-left my-4 my-md-0\">\n            <li>\n              <i class=\"fa fa-check text-success-m2 text-110 mr-2 mt-1\"></i>\n              <span>\n                <span class=\"text-110\">Donec id elit.</span>\n              Fusce dapibus...\n              </span>\n            </li>\n\n            <li class=\"mt-25\">\n              <i class=\"fa fa-check text-success-m2 text-110 mr-2 mt-1\"></i>\n              <span class=\"text-110\">\n                Placerat duis\n            </span>\n            </li>\n\n            <li class=\"mt-25\">\n              <i class=\"fa fa-times text-danger-m3 text-110 mr-25 mt-1\"></i>\n              <span class=\"text-110\">\n                Tortor mauris\n            </span>\n            </li>\n          </ul>\n\n          <div class=\"col-12 col-md-4 text-center\">\n            <a href=\"#\" class=\"f-n-hover btn btn-info btn-raised px-4 py-25 w-75 text-600\">Get Started</a>\n          </div>\n        </div>\n\n      </div>\n\n      </div>\n    </div>\n</div> */\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}