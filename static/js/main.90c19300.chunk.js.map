{"version":3,"sources":["components/Todo.js","components/TodoListView.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","useState","desc2","setDesc2","show","setShow","handleClose","_id","e","a","axios","put","then","res","console","log","date","Date","todo","created_at","date2","getDate","getMonth","getFullYear","className","String","title","toUpperCase","description","onClick","delete","data","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","placeholder","value","onChange","target","Button","sendData","TodoView","todoList","map","Todo","App","setTodoList","setTitle","desc","setDesc","useEffect","get","event","class","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90c19300.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\n\nfunction TodoItem(props) {\n\n  const [title2, setTitle2] = useState(\"\");\n  const [desc2, setDesc2] = useState(\"\");\n  \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const deleteTodoHandler = (_id) => {\n    axios\n      .delete(`https://to-do-app-farm-backend.herokuapp.com/api/todo/${_id}`)\n      .then((res) => console.log(res.data));\n  };\n\n  async function sendData(_id,e){\n\n    if(desc2==\"\"){\n      handleClose();\n    }else{\n\n      await axios\n        .put(`https://to-do-app-farm-backend.herokuapp.com/api/todo/${_id}/?desc=${desc2}`)\n        .then((res) =>{\n          console.log(res);\n              if (res){\n                handleClose();\n              }\n        });\n\n    }\n  };\n\n\n  let date = new Date(props.todo.created_at);\n  let date2 =`${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`\n  \n  date = 'created on ' + date2\n\n  return (\n    <li className=\"list-group-item\">\n     <div className=\"card\">\n        <h4 className=\"card-header\">{String(props.todo.title).toUpperCase()}</h4>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{props.todo.description}</p>\n          <p className=\"text-muted\">{date}</p>\n          \n          <button\n          onClick={() => deleteTodoHandler(props.todo._id)}\n          className=\"border-0 btn-transition btn btn-outline-danger\"\n        >\n          <i className=\"fa fa-trash\"></i>{\" \"}\n        </button>\n          <button\n          onClick={handleShow}\n          className=\"border-0 btn-transition btn btn-outline-success\"\n        >\n          <i className=\"fa fa-edit\"></i>{\" \"}\n        </button>\n        </div>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n         \n          <Form>\n            Title <h4>{props.todo.title}</h4>\n                <br/>\n            <Form.Group>\n                <Form.Label>New Description</Form.Label>\n                <Form.Control\n                type=\"text\"\n                placeholder={props.todo.description}\n                value={desc2}\n                onChange={(e) => setDesc2(e.target.value)}\n                />\n            \n            </Form.Group>\n\n            <Button className=\"glow-on-hover\" onClick={(e) => sendData(props.todo._id)}>\n                enviar\n            </Button>\n                {/* <button\n            onClick={(e) => onLoginFormSubmit(props.todo._id)}\n            className=\"glow-on-hover\"\n        >\n            enviar\n        </button> */}\n        </Form>\n        </Modal.Body>\n      </Modal>\n        {/* <myModal show={show} onHide={handleClose} props = {props}/> */}\n      \n    </li>\n  );\n}\n\nexport default TodoItem;\n\n","import TodoItem from \"./Todo\";\n\nexport default function TodoView(props) {\n  return (\n    <div >\n      <ul className=\" list-group list-group-flush\">\n        {props.todoList.map((todo) => (\n          <TodoItem todo={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoView from \"./components/TodoListView\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState([{}]);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // Read all todos\n  useEffect(() => {\n    axios\n      .get(\"https://to-do-app-farm-backend.herokuapp.com/api/todo\")\n      .then((res) => {\n        setTodoList(res.data);\n      });\n  });\n\n  // Post a todo\n  const addTodoHandler = (e) => {\n    setTitle(\"\")\n    setDesc(\"\")\n    axios\n      .post(\"https://to-do-app-farm-backend.herokuapp.com/api/todo/\", {\n        title: title,\n        description: desc,\n      })\n      .then((res) =>console.log(res));\n  \n  };\n\n  return (\n    <div\n      className=\" col-md-5 list-group-item  justify-content-center align-items-center mx-auto\"\n    >\n      <h1>What's the Plan for Today?</h1>\n      <div className=\"card-body \">\n\n        <span className=\"card-text\">\n          <input\n            className=\"mb-2 form-control titleIn\"\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"Title\"\n            value={title}\n          />\n          <input\n            className=\"mb-2 form-control desIn\"\n            onChange={(event) => setDesc(event.target.value)}\n            placeholder=\"Description\"\n            value={desc}\n            \n          />\n              <div class=\"col d-flex justify-content-center mb-3\">\n                <button className=\"glow-on-hover\" onClick={addTodoHandler}>Add Task</button>\n\n              </div>\n        </span>\n\n        \n        <div>\n          <TodoView todoList={todoList} />\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n// HACER UN CAMBIO EN EL DISEÃ‘O\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}